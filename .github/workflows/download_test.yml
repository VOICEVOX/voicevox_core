name: Download test workflow
on:
  push:
  pull_request:
jobs:
  downlaod-releases:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            download_command: ./scripts/downloads/Download.ps1
            download_dir: voicevox_core
            check_items: |
              core.dll
              open_jtalk_dic_utf_8-1.11
              README.txt
          - os: ubuntu-latest
            download_command: ./scripts/downloads/download.sh
            download_dir: voicevox_core
            check_items: |
              libcore.so
              open_jtalk_dic_utf_8-1.11
              README.txt
          - os: macos-latest
            download_command: ./scripts/downloads/download.sh
            download_dir: voicevox_core
            check_items: |
              libcore.so
              open_jtalk_dic_utf_8-1.11
              README.txt
    runs-on: ${{ matrix.os }}
    env:
      EXPECTED_VOICEVOX_CORE_VERSION: ${{ matrix.expected_version || '0.13.0' }}
    steps:
      - uses: actions/checkout@v2
      - name: Execute download command
        run: ${{ matrix.download_command }}
      - name: Check downloaded version
        shell: bash
        run: |
          [ -e "${{ matrix.download_dir }}/VERSION" ]
          [ "$(cat "${{ matrix.download_dir }}/VERSION")" = "${{ env.EXPECTED_VOICEVOX_CORE_VERSION }}" ]
      - name: Check downloaded files
        shell: bash
        run: |
          items=($(echo -e "${{ matrix.check_items }}" | xargs))
          for item in "${items[@]}"
          do
            echo "check exists ${{ matrix.download_dir }}/${item}..."
            [ -e "${{ matrix.download_dir }}/${item}" ]
          done
