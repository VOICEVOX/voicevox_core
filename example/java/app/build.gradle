/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // Use the JUnit 5 integration.
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation("org.jetbrains.kotlinx:kotlinx-cli:0.3.6")

    // TODO: ちゃんと配布したらそれに置き換える
    implementation files("../../../crates/voicevox_core_java_api/lib/build/libs/lib-0.0.0.jar")
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: "2.10.1"
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: "3.0.2"
    // https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
    implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: "2.1.1"
    implementation group: 'com.microsoft.onnxruntime', name: 'onnxruntime', version: "1.14.0"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'jp.hiroshiba.voicevoxcoreexample.AppKt'
    tasks.run.workingDir = rootProject.projectDir
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
