plugins {
    id 'com.android.library' version '8.1.1'
    id 'org.jetbrains.kotlin.android' version '1.9.10'
}

def String cargoToml = file('../../../Cargo.toml').text
def String cargoTomlVersion = (cargoToml =~ /version = "([0-9.]+)"/)[0][1]

def String target = System.getenv('TARGET')?.toLowerCase() ?: "cpu"
def boolean isGpu = target.contains('cuda') || target.contains('directml')

version = cargoTomlVersion


repositories {
    google()
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'

    implementation group: 'com.microsoft.onnxruntime', name: 'onnxruntime-android', version: '1.14.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 26
    }
    namespace "jp.hiroshiba.voicevoxcore"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["./src/main/resources/jniLibs"]
        }
    }
}
