language = "C"

# Options for wrapping the contents of the header:

header = """
/**
 * @file voicevox_core.h
 *
 * 無料で使える中品質なテキスト読み上げソフトウェア、VOICEVOXのコア。
 *
 * <h2 id="voicevox-core-safety">
 *   <a href="#voicevox-core-safety">Safety</a>
 * </h2>
 *
 * このライブラリを正しく使用するためには、いくつかの不変条件が守られている必要がある。本ドキュメントではこの不変条件を<b>安全性要件</b>(_safety
 * requirements_)と呼び、"Safety"というセクションの下に安全性要件を示す。
 *
 * 安全性要件の違反は本ライブラリにおける<b>未定義動作</b>(_undefined
 * behavior_)である。未定義動作が発生した場合、<b>それにより何が起きるかの保証もされない</b>。
 *
 * `voicevox_core`全体における安全性要件は以下の通りである。
 *
 * - 「読み込みについて有効」と説明されているポインタは次の条件を満たしていなければならない。
 *     - <b>間接参照可能</b>(_dereferenceable_)である。
 *     - 参照先のメモリは他スレッドから書き込み中ではない。
 * - 「書き込みについて有効」と説明されているポインタは次の条件を満たしていなければならない。
 *     - 参照先のメモリは有効である (ただしメモリアラインメントに沿っている必要は無い)。
 *     - 参照先のメモリは他スレッドからアクセス中ではない。
 * - このライブラリで生成したオブジェクトの解放は、このライブラリが提供するAPIで行わなくてはならない(<code>free</code>や<code>HeapFree</code>で行ってはならない)。
 *
 * 次のことに注意すること。
 *
 * - 次のポインタは読み込みにおいても書き込みにおいても有効ではない。
 *     - ヌルポインタ。
 *     - 解放されたポインタ。
 * - voicevox_coreをアンロードする場合、voicevox_coreが生成したポインタが有効であり続けることは保証されない。
 */"""
include_guard = "VOICEVOX_CORE_INCLUDE_GUARD"
no_includes = true
include_version = true
cpp_compat = true
after_includes = """
#ifdef __cplusplus
#include <cstdint>
#else // __cplusplus
#include <stdbool.h>
#include <stdint.h>
#endif // __cplusplus"""

# Code Style Options

documentation_style = "doxy"

# Codegen Options

[fn]
prefix = """
#ifdef _WIN32
__declspec(dllimport)
#endif"""
args = "vertical"

[enum]
rename_variants = "ScreamingSnakeCase"

# Options for how your Rust library should be parsed

[parse]
parse_deps = true
include = ["voicevox_core"]
