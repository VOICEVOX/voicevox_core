[package]
name = "voicevox_core_c_api"
version.workspace = true
edition.workspace = true
publish.workspace = true

[lib]
crate-type = ["cdylib"]
name = "voicevox_core"

[[test]]
harness = false
name = "e2e"

[features]
cuda = ["voicevox_core/cuda"]
directml = ["voicevox_core/directml"]

[dependencies]
anstream = { workspace = true, default-features = false, features = ["auto"] }
anstyle-query.workspace = true
camino.workspace = true
chrono = { workspace = true, default-features = false, features = ["clock"] }
colorchoice.workspace = true
cstr.workspace = true
derive-getters.workspace = true
futures.workspace = true
itertools.workspace = true
libc.workspace = true
once_cell.workspace = true
process_path.workspace = true
serde_json = { workspace = true, features = ["preserve_order"] }
thiserror.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
uuid.workspace = true
voicevox_core.workspace = true

[dev-dependencies]
anyhow.workspace = true
assert_cmd = { workspace = true, features = ["color-auto"] }
clap = { workspace = true, features = ["derive"] }
duct.workspace = true
easy-ext.workspace = true
inventory.workspace = true
libloading.workspace = true
libtest-mimic.workspace = true
ndarray.workspace = true
ndarray-stats.workspace = true
regex.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_with.workspace = true
tempfile.workspace = true
test_util.workspace = true
toml.workspace = true
typetag.workspace = true

[lints.rust]
unsafe_code = "allow" # C APIのための操作
rust_2018_idioms = "warn"
