[package]
name = "voicevox_core"
version.workspace = true
edition.workspace = true
publish.workspace = true

[features]
default = []
directml = ["onnxruntime/directml"]

[dependencies]
anyhow.workspace = true
async_zip = { workspace = true, features = ["deflate"] }
camino.workspace = true
derive-getters.workspace = true
derive-new.workspace = true
derive_more.workspace = true
duplicate.workspace = true
easy-ext.workspace = true
educe.workspace = true
enum-map.workspace = true
fs-err = { workspace = true, features = ["tokio"] }
futures.workspace = true
indexmap = { workspace = true, features = ["serde"] }
itertools.workspace = true
jlabel.workspace = true
nanoid.workspace = true
ndarray.workspace = true
once_cell.workspace = true
onnxruntime.workspace = true
open_jtalk.workspace = true
ouroboros.workspace = true
rayon.workspace = true
regex.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
smallvec.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["rt"] } # FIXME: feature-gateする
tracing.workspace = true
uuid = { workspace = true, features = ["v4", "serde"] }
voicevox_core_macros = { path = "../voicevox_core_macros" }
zip.workspace = true

[dev-dependencies]
heck.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
rstest_reuse.workspace = true
test_util.workspace = true
tokio = { workspace = true, features = ["rt", "macros"] }

[target."cfg(windows)".dependencies]
humansize.workspace = true
windows = { workspace = true, features = ["Win32_Foundation", "Win32_Graphics_Dxgi"] }

[lints.rust]
unsafe_code = "deny" # FIXME: あまり意味が無くなっているため潔く`allow`にする。あるいはunsafeを撲滅する
rust_2018_idioms = "warn"
